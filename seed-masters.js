// Seed script for Rasi, Nakshatram, Gothiram, and Kuladeivam master data
require("dotenv").config();
const mongoose = require("mongoose");

// MongoDB connection string
const MONGODB_URI = process.env.MONGODB_URI || "mongodb://localhost:27017/avs";

// Define schemas
const RasiSchema = new mongoose.Schema(
  {
    name: { type: String, required: true, unique: true },
    tamilName: { type: String, required: true },
    isActive: { type: Boolean, default: true },
  },
  { timestamps: true }
);

const NakshatramSchema = new mongoose.Schema(
  {
    name: { type: String, required: true, unique: true },
    tamilName: { type: String, required: true },
    isActive: { type: Boolean, default: true },
  },
  { timestamps: true }
);

const GothiramSchema = new mongoose.Schema(
  {
    name: { type: String, required: true, unique: true },
    tamilName: { type: String, required: true },
    isActive: { type: Boolean, default: true },
  },
  { timestamps: true }
);

const KuladeivamSchema = new mongoose.Schema(
  {
    name: { type: String, required: true, unique: true },
    tamilName: { type: String, required: false, default: "" },
    templeLocation: String,
    isActive: { type: Boolean, default: true },
  },
  { timestamps: true }
);

// Models
const Rasi = mongoose.models.Rasi || mongoose.model("Rasi", RasiSchema);
const Nakshatram =
  mongoose.models.Nakshatram || mongoose.model("Nakshatram", NakshatramSchema);
const Gothiram =
  mongoose.models.Gothiram || mongoose.model("Gothiram", GothiramSchema);
const Kuladeivam =
  mongoose.models.Kuladeivam || mongoose.model("Kuladeivam", KuladeivamSchema);

// Rasi Data (12 Zodiac Signs)
const rasiData = [
  { name: "Mesham", tamilName: "‡ÆÆ‡Øá‡Æ∑‡ÆÆ‡Øç" },
  { name: "Rishabam", tamilName: "‡Æ∞‡Æø‡Æ∑‡Æ™‡ÆÆ‡Øç" },
  { name: "Mithunam", tamilName: "‡ÆÆ‡Æø‡Æ§‡ØÅ‡Æ©‡ÆÆ‡Øç" },
  { name: "Kadagam", tamilName: "‡Æï‡Æü‡Æï‡ÆÆ‡Øç" },
  { name: "Simmam", tamilName: "‡Æö‡Æø‡ÆÆ‡Øç‡ÆÆ‡ÆÆ‡Øç" },
  { name: "Kanni", tamilName: "‡Æï‡Æ©‡Øç‡Æ©‡Æø" },
  { name: "Thulaam", tamilName: "‡Æ§‡ØÅ‡Æ≤‡Ææ‡ÆÆ‡Øç" },
  { name: "Vrischigam", tamilName: "‡Æµ‡Æø‡Æ∞‡ØÅ‡Æö‡Øç‡Æö‡Æø‡Æï‡ÆÆ‡Øç" },
  { name: "Dhanusu", tamilName: "‡Æ§‡Æ©‡ØÅ‡Æö‡ØÅ" },
  { name: "Makaram", tamilName: "‡ÆÆ‡Æï‡Æ∞‡ÆÆ‡Øç" },
  { name: "Kumbam", tamilName: "‡Æï‡ØÅ‡ÆÆ‡Øç‡Æ™‡ÆÆ‡Øç" },
  { name: "Meenam", tamilName: "‡ÆÆ‡ØÄ‡Æ©‡ÆÆ‡Øç" },
];

// Nakshatram Data (27 Birth Stars)
const nakshatramData = [
  { name: "Ashwini", tamilName: "‡ÆÖ‡Æ∏‡Øç‡Æµ‡Æø‡Æ©‡Æø" },
  { name: "Bharani", tamilName: "‡Æ™‡Æ∞‡Æ£‡Æø" },
  { name: "Krittika", tamilName: "‡Æï‡Ææ‡Æ∞‡Øç‡Æ§‡Øç‡Æ§‡Æø‡Æï‡Øà" },
  { name: "Rohini", tamilName: "‡Æ∞‡Øã‡Æπ‡Æø‡Æ£‡Æø" },
  { name: "Mrigashirsha", tamilName: "‡ÆÆ‡Æø‡Æ∞‡ØÅ‡Æï‡Æö‡ØÄ‡Æ∞‡Æø‡Æ∑‡ÆÆ‡Øç" },
  {
    name: "Thiruvaathirai",
    tamilName: "‡Æ§‡Æø‡Æ∞‡ØÅ‡Æµ‡Ææ‡Æ§‡Æø‡Æ∞‡Øà",
  },
  {
    name: "Punarpoosam",
    tamilName: "‡Æ™‡ØÅ‡Æ©‡Æ∞‡Øç‡Æ™‡ØÇ‡Æö‡ÆÆ‡Øç",
  },
  { name: "Poosam", tamilName: "‡Æ™‡ØÇ‡Æö‡ÆÆ‡Øç" },
  { name: "Ayilyam", tamilName: "‡ÆÜ‡ÆØ‡Æø‡Æ≤‡Øç‡ÆØ‡ÆÆ‡Øç" },
  { name: "Magam", tamilName: "‡ÆÆ‡Æï‡ÆÆ‡Øç" },
  { name: "Pooram", tamilName: "‡Æ™‡ØÇ‡Æ∞‡ÆÆ‡Øç" },
  {
    name: "Uthiram",
    tamilName: "‡Æâ‡Æ§‡Øç‡Æ§‡Æø‡Æ∞‡ÆÆ‡Øç",
    alternateNames: ["Uttara Phalguni"],
  },
  { name: "Hastham", tamilName: "‡Æπ‡Æ∏‡Øç‡Æ§‡ÆÆ‡Øç" },
  { name: "Chithirai", tamilName: "‡Æö‡Æø‡Æ§‡Øç‡Æ§‡Æø‡Æ∞‡Øà" },
  { name: "Swathi", tamilName: "‡Æö‡ØÅ‡Æµ‡Ææ‡Æ§‡Æø" },
  { name: "Visakam", tamilName: "‡Æµ‡Æø‡Æö‡Ææ‡Æï‡ÆÆ‡Øç" },
  { name: "Anusham", tamilName: "‡ÆÖ‡Æ©‡ØÅ‡Æ∑‡ÆÆ‡Øç" },
  { name: "Kettai", tamilName: "‡Æï‡Øá‡Æü‡Øç‡Æü‡Øà" },
  { name: "Moolam", tamilName: "‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç" },
  { name: "Pooradam", tamilName: "‡Æ™‡ØÇ‡Æ∞‡Ææ‡Æü‡ÆÆ‡Øç" },
  {
    name: "Uthiradam",
    tamilName: "‡Æâ‡Æ§‡Øç‡Æ§‡Æø‡Æ∞‡Ææ‡Æü‡ÆÆ‡Øç",
  },
  { name: "Thiruvonam", tamilName: "‡Æ§‡Æø‡Æ∞‡ØÅ‡Æµ‡Øã‡Æ£‡ÆÆ‡Øç" },
  { name: "Avittam", tamilName: "‡ÆÖ‡Æµ‡Æø‡Æü‡Øç‡Æü‡ÆÆ‡Øç" },
  { name: "Sadayam", tamilName: "‡Æö‡Æ§‡ÆØ‡ÆÆ‡Øç" },
  {
    name: "Poorattadhi",
    tamilName: "‡Æ™‡ØÇ‡Æ∞‡Æü‡Øç‡Æü‡Ææ‡Æ§‡Æø",
  },
  {
    name: "Uthirattadhi",
    tamilName: "‡Æâ‡Æ§‡Øç‡Æ§‡Æø‡Æ∞‡Æü‡Øç‡Æü‡Ææ‡Æ§‡Æø",
  },
  { name: "Revathi", tamilName: "‡Æ∞‡Øá‡Æµ‡Æ§‡Æø" },
];

// Gothiram Data (33 Gotras) - Without God of Worship
const gothiramData = [
  { name: "Alatudaiyan", tamilName: "‡ÆÜ‡Æ≤‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Ethumaludaiyan", tamilName: "‡Æé‡Æ§‡ØÅ‡ÆÆ‡Æ≤‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Gunakathudaiyan", tamilName: "‡Æï‡ØÅ‡Æ£‡Æï‡Øá‡Æ≥‡Øç‡Æï‡Ææ‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Kalappalan (Valamudaiyan)", tamilName: "‡Æï‡Æ≥‡Æ™‡Øç‡Æ™‡Ææ‡Æ≥‡Æ∞‡Øç (‡Æµ‡Æ≥‡ÆÆ‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç)" },
  { name: "Kalathudaiyan", tamilName: "‡Æï‡Ææ‡Æ≥‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Kaarudaiyan", tamilName: "‡Æï‡Ææ‡Æ∞‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Koondudaiyan", tamilName: "‡Æï‡Øã‡Æ©‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Konnakudaiyan", tamilName: "‡Æï‡Øä‡Æ©‡Øç‡Æ©‡Æï‡Øç‡Æï‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Koothudaiyan", tamilName: "‡Æï‡ØÇ‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Koottudaiyan", tamilName: "‡Æï‡Øã‡Æü‡Øç‡Æü‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Kuruvaludaiyan (Kuruvarludaiyan)", tamilName: "‡Æï‡ØÅ‡Æ∞‡ØÅ‡Æµ‡Æ∞‡ØÅ‡Æ≥‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Marudhudaiyan", tamilName: "‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Mathudaiyan", tamilName: "‡ÆÆ‡Ææ‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  {
    name: "Mirathudaiyan (Kuruvaludaiyan)",
    tamilName: "‡ÆÆ‡Æø‡Æ∞‡Æü‡Øç‡Æü‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç (‡Æï‡ØÅ‡Æ∞‡ØÅ‡Æµ‡Æ≤‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç)",
  },
  { name: "Murugathudaiyan", tamilName: "‡ÆÆ‡ØÅ‡Æ∞‡ØÅ‡Æï‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Nalludaiyan", tamilName: "‡Æ®‡Æ≤‡Øç‡Æ≤‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Nathamudaiyan", tamilName: "‡Æ®‡Æ§‡Øç‡Æ§‡ÆÆ‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Nimaludaiyan", tamilName: "‡Æ®‡Æø‡ÆÆ‡Øç‡ÆÆ‡Æ≤‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Panaiyadaiyan", tamilName: "‡Æ™‡Æ©‡Øà‡ÆØ‡Æü‡Æø‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Pavaludaiyan", tamilName: "‡Æ™‡Ææ‡Æµ‡Æ≤‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Pundiludaiyan", tamilName: "‡Æ™‡ØÇ‡Æ£‡Øç‡Æü‡Æø‡Æ≤‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Samayamanthiri", tamilName: "‡Æö‡ÆÆ‡ÆØ‡ÆÆ‡Æ®‡Øç‡Æ§‡Æø‡Æ∞‡Æø" },
  {
    name: "Sannamangalathudaiyan (Pethaan)",
    tamilName: "‡Æö‡Æ©‡Øç‡Æ©‡ÆÆ‡Æô‡Øç‡Æï‡Æ≤‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç (‡Æ™‡Øá‡Æ§‡Ææ‡Æ©‡Øç)",
  },
  { name: "Sathudaiyan", tamilName: "‡Æö‡Ææ‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Siruthalanudaiyan", tamilName: "‡Æö‡Æø‡Æ±‡ØÅ‡Æ§‡Æ≤‡Æ©‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Thettumangalathudaiyan", tamilName: "‡Æ§‡ØÜ‡Æ§‡Øç‡Æ§‡ÆÆ‡Æô‡Øç‡Æï‡Æ≤‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Thevangudaiyan", tamilName: "‡Æ§‡Øá‡Æµ‡Æô‡Øç‡Æï‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Thirusangudaiyan", tamilName: "‡Æ§‡Æø‡Æ∞‡ØÅ‡Æö‡Øç‡Æö‡Æô‡Øç‡Æï‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  {
    name: "Valavuthiranailathambe (Valavudaiyan)",
    tamilName: "‡Æµ‡Æ≥‡Æµ‡ØÅ‡Æ§‡Æø‡Æ∞‡Æ©‡Øà‡Æ≤‡Æ§‡Øç‡Æ§‡ÆÆ‡Øç‡Æ™‡Øá",
  },
  { name: "Velanchakravarthi", tamilName: "‡Æö‡Æï‡Øç‡Æï‡Æ∞‡Æµ‡Æ∞‡Øç‡Æ§‡Øç‡Æ§‡Æø" },
  { name: "Vennavaludaiyan", tamilName: "‡Æµ‡ØÜ‡Æ£‡Øç‡Æ£‡Ææ‡Æµ‡Æ≤‡ØÅ‡Æü‡Øà‡ÆØ‡Ææ‡Æ©‡Øç" },
  { name: "Vilvarayan", tamilName: "‡Æµ‡Æø‡Æ≤‡Øç‡Æµ‡Æ∞‡Ææ‡ÆØ‡Æ©‡Øç" },
  { name: "Vivarayan", tamilName: "‡Æµ‡Æø‡Æµ‡Æ∞‡Ææ‡ÆØ‡Æ©‡Øç" },
];

// Kuladeivam Data (Gods of Worship) - Separate from Gothiram
const kuladeivamData = [
  { name: "Arulmigu Mangayee Amman", tamilName: "" },
  { name: "Arulmigu Neelavanathi Amman", tamilName: "" },
  { name: "Arulmigu Sellaye Amman", tamilName: "" },
  { name: "Arulmigu Aadyakalam Katha Amman", tamilName: "" },
  { name: "Arulmigu Ellai Amman", tamilName: "" },
  { name: "Arulmigu Anagalaparameswari", tamilName: "" },
  { name: "Arulmigu Periyandasamy Kovil Muthaiyan", tamilName: "" },
  { name: "Arulmigu Sellaye Amman", tamilName: "" },
  { name: "Arulmigu Papathi Amman", tamilName: "" },
  { name: "Arulmigu Karrupu", tamilName: "" },
  { name: "Arulmigu Sellandi Amman", tamilName: "" },
  { name: "Arulmigu Thaichi Amman", tamilName: "" },
  { name: "Arulmigu Venkatachalapathy", tamilName: "" },
  { name: "Arulmigu Periyakovil Deivangal", tamilName: "" },
  { name: "Arulmigu Sellayee Amman", tamilName: "" },
  { name: "Arulmigu Thayumanavar Samy", tamilName: "" },
  { name: "Arulmigu Papathi Amman", tamilName: "" },
  { name: "Arulmigu Meenakshi Amman", tamilName: "" },
  { name: "Arulmigu Aalai Muthaiyan", tamilName: "" },
  { name: "Arulmigu Ayyanar", tamilName: "" },
  { name: "Arulmigu Ayyanar", tamilName: "" },
  { name: "Arulmigu Elayee Amman", tamilName: "" },
  { name: "Arulmigu Aravayi Amman", tamilName: "" },
  { name: "Arulmigu Puthu Karruppannaswamy", tamilName: "" },
  { name: "Arulmigu Srirangam Aranganathar", tamilName: "" },
  { name: "Arulmigu Aeramveeli Amman", tamilName: "" },
  { name: "Arulmigu Vellankarruppu", tamilName: "" },
  { name: "Arulmigu Pachai Amman", tamilName: "" },
  { name: "Arulmigu Venkatachalapathi", tamilName: "" },
  { name: "Arulmigu Karruppanaswamy", tamilName: "" },
  { name: "Arulmigu Arapalisvara", tamilName: "" },
  { name: "Arulmigu Irrani Amman", tamilName: "" },
  { name: "Arulmigu Venkatachalapathy", tamilName: "" },
];

// Seed function
async function seedMasterData() {
  try {
    console.log("üå± Starting seed process...\n");

    // Connect to MongoDB
    console.log("üì° Connecting to MongoDB...");
    await mongoose.connect(MONGODB_URI);
    console.log("‚úÖ Connected to MongoDB\n");

    // Seed Rasi
    console.log("üìä Seeding Rasi (Zodiac Signs)...");
    const rasiResult = await Rasi.insertMany(rasiData, {
      ordered: false,
    }).catch((err) => {
      if (err.code === 11000) {
        console.log(
          "‚ö†Ô∏è  Some Rasi entries already exist, skipping duplicates..."
        );
      }
    });
    console.log(`‚úÖ Rasi seeding completed: ${rasiData.length} entries\n`);

    // Seed Nakshatram
    console.log("‚≠ê Seeding Nakshatram (Birth Stars)...");
    const nakshatramResult = await Nakshatram.insertMany(nakshatramData, {
      ordered: false,
    }).catch((err) => {
      if (err.code === 11000) {
        console.log(
          "‚ö†Ô∏è  Some Nakshatram entries already exist, skipping duplicates..."
        );
      }
    });
    console.log(
      `‚úÖ Nakshatram seeding completed: ${nakshatramData.length} entries\n`
    );

    // Seed Gothiram
    console.log("üèõÔ∏è  Seeding Gothiram (Gotras)...");
    const gothiramResult = await Gothiram.insertMany(gothiramData, {
      ordered: false,
    }).catch((err) => {
      if (err.code === 11000) {
        console.log(
          "‚ö†Ô∏è  Some Gothiram entries already exist, skipping duplicates..."
        );
      }
    });
    console.log(
      `‚úÖ Gothiram seeding completed: ${gothiramData.length} entries\n`
    );

    // Seed Kuladeivam
    console.log("üïâÔ∏è  Seeding Kuladeivam (Gods of Worship)...");
    const kuladeivamResult = await Kuladeivam.insertMany(kuladeivamData, {
      ordered: false,
    }).catch((err) => {
      if (err.code === 11000) {
        console.log(
          "‚ö†Ô∏è  Some Kuladeivam entries already exist, skipping duplicates..."
        );
      }
    });
    console.log(
      `‚úÖ Kuladeivam seeding completed: ${kuladeivamData.length} entries\n`
    );

    // Summary
    console.log("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
    console.log("‚ú® Master Data Seeding Summary");
    console.log("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
    console.log(`üìä Rasi: ${rasiData.length} entries`);
    console.log(`‚≠ê Nakshatram: ${nakshatramData.length} entries`);
    console.log(`üèõÔ∏è  Gothiram: ${gothiramData.length} entries`);
    console.log(`üïâÔ∏è  Kuladeivam: ${kuladeivamData.length} entries`);
    console.log("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
    console.log("üéâ All master data seeded successfully!\n");

    // Display counts from database
    const rasiCount = await Rasi.countDocuments();
    const nakshatramCount = await Nakshatram.countDocuments();
    const gothiramCount = await Gothiram.countDocuments();
    const kuladeivamCount = await Kuladeivam.countDocuments();

    console.log("üìà Current Database Counts:");
    console.log(`   Rasi: ${rasiCount}`);
    console.log(`   Nakshatram: ${nakshatramCount}`);
    console.log(`   Gothiram: ${gothiramCount}`);
    console.log(`   Kuladeivam: ${kuladeivamCount}\n`);
  } catch (error) {
    console.error("‚ùå Error seeding data:", error.message);
    process.exit(1);
  } finally {
    await mongoose.connection.close();
    console.log("üîå Database connection closed");
    process.exit(0);
  }
}

// Run seeder
seedMasterData();
